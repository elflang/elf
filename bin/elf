#!/bin/sh

dir="$(pwd)"
x="$(readlink -f "$0" 2>/dev/null || readlink "$0" 2>/dev/null || echo "$0")"
case "$x" in ../*) x="$(dirname "$0")/${x}" ;; esac
cd "$(dirname "$x")"
cd ..
home="$(pwd)"
cd "${dir}"

case "$1" in
  *.js.elf)     host=node;;
  *.node.elf)   host=node;;
  *.lua.elf)    host=lua;;
  *.luajit.elf) host=luajit;;
  *.luvit.elf)  host=luvit;;
  *.ufo.elf)    host=ufo;;
esac

if [ -z "$host" ]
then
  if [ ! -z "${ELF_HOST}" ]
  then
      host="${ELF_HOST}"
  elif luajit -v > /dev/null 2>&1
  then
      host=luajit
  elif lua -v > /dev/null 2>&1
  then
      host=lua
  elif node -v > /dev/null 2>&1
  then
      host=node
  else
      echo "no host found" && exit 1
  fi
fi

case "$host" in
  luvit*)
    host="$(which "$host")"
    if [ -z "$host" ]; then
      if [ ! -d "${home}/bin/luvit" ]; then
        read -r -p "luvit not found. Install it to elf/bin/luvit? [y/N] " response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
          echo git clone https://github.com/luvit/luvit "${home}/bin/luvit"
          git clone 'https://github.com/luvit/luvit' "${home}/bin/luvit" && cd "${home}/bin/luvit" && make
          cd "${dir}"
        else
          exit 1
        fi
      fi
      host="${home}/bin/luvit/luvit"
    fi
    host="$(readlink -f "$host" 2>/dev/null || readlink "$host" 2>/dev/null || echo "$host")"
  ;;
  ufo*)
    host="$(which "$host")"
    if [ -z "$host" ]; then
      if [ ! -d "${home}/bin/ufo" ]; then
        read -r -p "ufo not found. Install it to elf/bin/ufo? [y/N] " response
        if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then
          echo git clone https://github.com/malkia/ufo "${home}/bin/ufo"
          git clone 'https://github.com/malkia/ufo' "${home}/bin/ufo"
        else
          exit 1
        fi
      fi
      host="${home}/bin/ufo/luajit"
    fi
    host="$(readlink -f "$host" 2>/dev/null || readlink "$host" 2>/dev/null || echo "$host")"
  ;;
esac

case "$host" in
    node*)
        code=main.js
        export NODE_PATH="$NODE_PATH:${home}";;
    *)
        code=main.lua
        export LUA_PATH="$LUA_PATH;${home}/?.lua";;
esac
export ELF_HOST="${host}"

case "$1" in *.elf)
  script="$1"
  shift 1
  path="$(dirname "$script")"
  if [ ! -z "$path" ]; then
    if [ -e "${path}/package.json" ]; then
      if [ ! -z "$(cat "${path}/package.json" | grep "dependencies")" ]; then
        if [ ! -d "${path}/node_modules" ]; then
          if [ ! -z "$(which npm)" ]; then
            echo "cd '${path}' && npm i"
            cd "${path}" && npm i
            cd "${dir}"
          fi
        fi
      fi
    fi
    export NODE_PATH="$NODE_PATH:${path}/node_modules"
  fi
  base="$(basename "$script" .elf)"
  case "$base" in
    *.js)     base="$(basename "$base" .js)";;
    *.node)   base="$(basename "$base" .node)";;
    *.lua)    base="$(basename "$base" .lua)";;
    *.luajit) base="$(basename "$base" .luajit)";;
    *.luvit)  base="$(basename "$base" .luvit)";;
    *.ufo)    base="$(basename "$base" .ufo)";;
  esac
  base="${path}/${base}"
  if [ -e "${base}.js" ]; then
    if [ ! -s "${base}.js" ] || [ "$script" -nt "${base}.js" ]; then
      "${host}" "${home}/${code}" -c "$script" -o "${base}.js" -t js
    fi
    case "$host" in node*)
      script="${base}.js" ;;
    esac
  fi
  if [ -e "${base}.lua" ]; then
    if [ ! -s "${base}.lua" ] || [ "$script" -nt "${base}.lua" ]; then
      "${host}" "${home}/${code}" -c "$script" -o "${base}.lua" -t lua
    fi
    case "$host" in
      node*) ;;
      *)
      script="${base}.lua" ;;
    esac
  fi
  exec "${host}" "${home}/${code}" "$script" "$@"
  ;;
esac

exec "${host}" "${home}/${code}" "$@"
